apiVersion: v1
kind: Service
metadata:
  name: feedback-app
  labels:
    app: feedback-app
  annotations:
    cloud.google.com/backend-config: '{"default": "feedback-backendconfig"}'
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 80
  selector:
    app: feedback-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: feedback-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: feedback-app
  template:
    metadata:
      labels:
        app: feedback-app
    spec:
      containers:
        - name: feedback-app
          image: gcr.io/$PROJECT_ID/feedback_app:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
          volumeMounts:
            - name: static
              mountPath: /static
          lifecycle:
            postStart:
              exec:
                command: ["cp", "-r", "/app/config/static", "/"]

          # securityContext:
          #   fsGroup: 999

        - name: backend-server
          image: gcr.io/$PROJECT_ID/feedback_nginx:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 30
          volumeMounts:
            - name: static
              mountPath: /static

      volumes:
        - name: static
          persistentVolumeClaim:
            claimName: static-pvc

      initContainers:
        - name: init-db
          image: gcr.io/$PROJECT_ID/feedback_app:latest
          command:
            [
              "sh",
              "-c",
              "until mysqladmin -ufeedback -pfeedback -h feedback-db ping; do echo waiting for feedback-db; sleep 2; done;",
            ]
